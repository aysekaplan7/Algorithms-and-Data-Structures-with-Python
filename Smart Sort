def merge(S1,S2,S):
    i = j = 0
    while i +j < len(S):
        if j == len(S2) or (i < len(S1) and S1[i] < S2[j]):
            S[i + j] = S1[i]
            i += 1
        else:
            S[i + j] = S2[j]
            j += 1

def merge_sort(S):
    n = len(S)
    if n < 2:
        return 
    mid = n // 2
    S1 = S[0 : mid]
    S2 = S[mid : n]
    
    merge_sort(S1)
    merge_sort(S2)
    merge(S1,S2,S)

def insertion_sort(A):
    for k in range(1,len(A)):
        cur = A[k]
        j = k
        while j > 0 and A[j - 1] > cur:
            A[j] = A[j - 1]
            j -= 1
        A[j] = cur

from array import array
def smart_sort(arry):
    if type(arry) == array:
        if arry.typecode == "i" or arry.typecode == "f":
            if len(arry)<2:
                return arry
            else:
                if 1<len(arry)<50:
                    insertion_sort(arry)
                else:
                    merge_sort(arry)
            return arry
        else:
            raise Exception("elements must be integer or float")
